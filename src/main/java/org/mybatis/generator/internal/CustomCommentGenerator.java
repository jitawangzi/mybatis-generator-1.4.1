package org.mybatis.generator.internal;

import org.mybatis.generator.api.IntrospectedColumn;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.dom.java.Field;
import org.mybatis.generator.api.dom.java.Method;
import org.mybatis.generator.config.MergeConstants;
import org.mybatis.generator.internal.util.StringUtility;

/**
 * 自定义注释生成，修改的部分复写父类的方法
 * @date 2022年7月14日 下午5:09:12
 * @author SYQ
 */
public class CustomCommentGenerator extends DefaultCommentGenerator {

	/**
	 * Database Column Remarks:
	 *   数据库唯一id
	 *
	 * This field was generated by MyBatis Generator.
	 * This field corresponds to the database column t_role.id
	 *
	 * @mbg.generated
	 */
	//把默认的上面这种注释，换成下面这种在一行里的
	/** @mbg.generated 数据库唯一id*/
	@Override
	public void addFieldComment(Field field, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {
		if (suppressAllComments) {
			return;
		}
		StringBuffer comment = new StringBuffer() ;
		comment.append("/** ").append(MergeConstants.NEW_ELEMENT_TAG).append(" ");

		String remarks = introspectedColumn.getRemarks();
		if (addRemarkComments && StringUtility.stringHasValue(remarks)) {
			String[] remarkLines = remarks.split(System.getProperty("line.separator")); //$NON-NLS-1$
			for (int i = 0; i < remarkLines.length; i++) {
				comment.append(remarkLines[i]);
				if (i != remarkLines.length - 1) {
					comment.append(",");
				}
			}
		}
		comment.append(" */") ;

		field.addJavaDocLine(comment.toString()); //$NON-NLS-1$
	}

	@Override
	public void addFieldComment(Field field, IntrospectedTable introspectedTable) {
		if (suppressAllComments) {
			return;
		}
		field.addJavaDocLine(emptyComment()); //$NON-NLS-1$
	}

	// get方法的注释，
	@Override
	public void addGetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {
		if (suppressAllComments) {
			return;
		}
		method.addJavaDocLine(emptyComment()); //$NON-NLS-1$
	}

	@Override
	public void addSetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {
		addGetterComment(method, introspectedTable, introspectedColumn);
	}

	// mapper里面方法的注释
	@Override
	public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {
		if (suppressAllComments) {
			return;
		}
		method.addJavaDocLine(emptyComment()); //$NON-NLS-1$
	}

	/**
	 * 获取一个空的注释内容
	 * @return
	 */
	private String emptyComment() {
		StringBuffer comment = new StringBuffer();
		comment.append("/** ").append(MergeConstants.NEW_ELEMENT_TAG).append(" */");
		return comment.toString();
	}

}
